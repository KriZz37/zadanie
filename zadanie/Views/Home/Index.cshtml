@model zadanie.ViewModels.HomeViewModel

@{
    ViewData["Title"] = "Home Page";

    var files = Model.SeededFiles.Files;
    var folders = files.Where(x => x.FormId == null);
}

<div class="row border-bottom pb-1">
    <div class="card col-3">
        @using (Html.BeginForm("NewFolder", "Home", FormMethod.Post))
        {
            <div class="card-body">
                <div class="form-group">
                    <input name="Name" type="text" class="form-control" placeholder="Nazwa" />
                </div>
                <div class="form-group">
                    <select name='ParentId' class="form-control">
                        <option value="-1">-Wybierz rodzica-</option>
                        <option value="0">brak</option>
                        @foreach (var folder in folders)
                        {
                            <option value="@folder.Id">@folder.Name</option>
                        }
                    </select>
                    <span>@Html.ValidationMessageFor(x => x.NewFolder, "", new { @class = "text-danger" })</span>
                </div>
                <div class="form-group">
                    <button class="btn btn-primary btn-block">Dodaj nowy folder</button>
                </div>
            </div>
        }
    </div>
    <div class="card col-2">
        @using (Html.BeginForm("MoveFolder", "Home", FormMethod.Post))
        {
            <div class="card-body">
                <div class="form-group">
                    <select name='FolderId' class="form-control">
                        <option value="-1">-Wybierz folder-</option>
                        @foreach (var folder in folders)
                        {
                            <option value="@folder.Id">@folder.Name</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <select name='NewParentId' class="form-control">
                        <option value="-1">-Przenieś do-</option>
                        <option value="0">brak</option>
                        @foreach (var folder in folders)
                        {
                            <option value="@folder.Id">@folder.Name</option>
                        }
                    </select>
                    <span>@Html.ValidationMessageFor(x => x.MoveFolder, "", new { @class = "text-danger" })</span>
                </div>
                <div class="form-group">
                    <button class="btn btn-primary btn-block">Przenieś folder</button>
                </div>
            </div>
        }
    </div>
    <div class="card col-3">
        @using (Html.BeginForm("Create", "Form", FormMethod.Post))
        {
            <div class="card-body">
                <div class="form-group">
                    <input name="Name" type="text" class="form-control" placeholder="Nazwa" />
                </div>
                <div class="form-group">
                    <select name='ParentId' class="form-control">
                        <option value="-1">-Wybierz rodzica-</option>
                        <option value="0">brak</option>
                        @foreach (var folder in folders)
                        {
                            <option value="@folder.Id">@folder.Name</option>
                        }
                    </select>
                    <span>@Html.ValidationMessageFor(x => x.NewForm, "", new { @class = "text-danger" })</span>
                </div>
                <div class="form-group">
                    <button class="btn btn-primary btn-block">Dodaj nowy formularz</button>
                </div>
            </div>
        }
    </div>
    <div class="card col-2">
        @using (Html.BeginForm("ChangeFileName", "Home", FormMethod.Post))
        {
            <div class="card-body">
                <div class="form-group">
                    <select name='FileId' class="form-control">
                        <option value="-1">-Wybierz plik-</option>
                        @foreach (var file in files)
                        {
                            <option value="@file.Id">@file.Name</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <input name="NewFileName" type="text" class="form-control" placeholder="Nowa nazwa pliku" />
                    <span>@Html.ValidationMessageFor(x => x.ChangeName, "", new { @class = "text-danger" })</span>
                </div>
                <div class="form-group">
                    <button class="btn btn-primary btn-block">Zmień nazwę pliku</button>
                </div>
            </div>
        }
    </div>
    <div class="card col-2">
        @using (Html.BeginForm("DeleteFile", "Home", FormMethod.Post))
        {
            <div class="card-body">
                <div class="form-group">
                    <select id="deleteSelect" name='FileIdToDelete' class="form-control">
                        <option value="-1">-Wybierz plik-</option>
                        @foreach (var file in files)
                        {
                            <option value="@file.Id">@file.Name</option>
                        }
                    </select>
                    <span>@Html.ValidationMessageFor(x => x.FileIdToDelete, "", new { @class = "text-danger" })</span>
                </div>
                <div class="form-group">
                    <span id="confirmDeleteSpan" style="display:none;">
                        <span>
                            <i class="fas fa-exclamation-triangle"></i>
                            Czy chcesz ununąć?
                        </span>
                        <span class="btn-group w-100 mt-1">
                            <button class="btn btn-danger w-50" onclick="sendSelect()">Tak</button>
                            <span class="btn btn-primary w-50" onclick="confirmDelete(false)">Nie</span>
                        </span>
                    </span>
                    <span id="deleteSpan">
                        <span class="btn btn-danger btn-block" onclick="confirmDelete(true)">Usuń plik</span>
                    </span>
                </div>
            </div>
        }
    </div>
</div>
<div class="row mt-3 border-bottom" id="tree">
    @await Html.PartialAsync("_Tree", Model.SeededFiles)
</div>
<div class="mt-3 col-2">
    <button class="btn btn-primary btn-block" onclick="expandCollapse(true)" id="btnShow">
        Rozwiń wszystko
    </button>
    <button class="btn btn-primary btn-block" onclick="expandCollapse(false)" style="display: none" id="btnHide">
        Zwiń wszystko
    </button>
</div>